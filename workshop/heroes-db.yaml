apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: heroes-db
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: kubernetes.io/aws-ebs
  labels:
    app: heroes-db
    application: heroes-service
    system: quarkus-super-heroes
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
  storageClassName: gp2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: heroes-db-init-data
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: kubernetes.io/aws-ebs
  labels:
    app: heroes-db
    application: heroes-service
    system: quarkus-super-heroes
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Mi
  storageClassName: gp2
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: heroes-db
    application: heroes-service
    system: quarkus-super-heroes
  name: heroes-db
type: Opaque
data:
  database-name: aGVyb2VzX2RhdGFiYXNl
  database-password: c3VwZXJtYW4=
  database-user: c3VwZXJtYW4=
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: heroes-db
    application: heroes-service
    system: quarkus-super-heroes
  name: heroes-db-init
data:
  get-data.sh: |-
    #!/bin/bash

    curl https://raw.githubusercontent.com/quarkusio/quarkus-super-heroes/main/rest-heroes/deploy/db-init/initialize-tables.sql --output /docker-entrypoint-initdb.d/1-init-tables.sql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: heroes-db
    application: heroes-service
    system: quarkus-super-heroes
    app.kubernetes.io/part-of: heroes-service
    app.openshift.io/runtime: postgresql
  name: heroes-db
spec:
  replicas: 1
  selector:
    matchLabels:
      name: heroes-db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: heroes-db
        app: heroes-db
        application: heroes-service
        system: quarkus-super-heroes
    spec:
      containers:
      - env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: heroes-db
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: heroes-db
        - name: POSTGRESQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database-name
              name: heroes-db
        image: image-registry.openshift-image-registry.svc:5000/openshift/postgresql:latest
        imagePullPolicy: Always
        resources:
          limits:
            cpu: "1"
            memory: 128Mi
        volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: heroes-db-data
          - mountPath: /docker-entrypoint-initdb.d
            name: heroes-db-init-data
        livenessProbe:
          exec:
            command:
            - /usr/libexec/check-container
            - --live
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: heroes-db
        ports:
        - containerPort: 5432
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /usr/libexec/check-container
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      initContainers:
        - command:
            - sh
            - get-data.sh
          image: registry.access.redhat.com/ubi8-minimal:8.6
          name: get-data
          volumeMounts:
            - mountPath: /docker-entrypoint-preinitdb.d
              name: heroes-db-init
            - mountPath: /docker-entrypoint-initdb.d
              name: heroes-db-init-data
          workingDir: /docker-entrypoint-preinitdb.d
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      # securityContext:
      #   allowPrivilegeEscalation: false
      #   runAsNonRoot: true
      #   drop: ALL
      #   readOnlyRootFilesystem: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: heroes-db-data
          persistentVolumeClaim:
            claimName: heroes-db
        - name: heroes-db-init-data
          # emptyDir: {}
          persistentVolumeClaim:
            claimName: heroes-db-init-data
        - configMap:
            name: heroes-db-init
          name: heroes-db-init
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: heroes-db
    application: heroes-service
    system: quarkus-super-heroes
  name: heroes-db
spec:
  ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    name: heroes-db
  type: ClusterIP